name: CI
on:
  pull_request:
  push:
    branches:
      - master
concurrency:
  # Skip intermediate builds: all builds except for builds on the `master` branch
  # Cancel intermediate builds: only pull request builds
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/master' || github.run_number }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
permissions:
  contents: read
  packages: read
env:
  MY_GCR_NAMESPACE: 'juliaparallel'
  MY_GCR_IMAGENAME: 'dask-jobqueue-ci-images'
jobs:
  finalize:
    timeout-minutes: 10
    needs:
      - unit-tests
      - example-pull-gcr
    # Important: the next line MUST be `if: always()`.
    # Do not change that line.
    # That line is necessary to make sure that this job runs even if tests fail.
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo unit-tests: ${{ needs.unit-tests.result }}
          echo example-pull-gcr: ${{ needs.example-pull-gcr.result }}
      - run: exit 1
        # The last line must NOT end with ||
        # All other lines MUST end with ||
        if: |
          (needs.unit-tests.result != 'success') ||
          (needs.example-pull-gcr.result != 'success')
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.2'  # minimum Julia version supported in Project.toml
          - '1.6'  # previous LTS
          - '1.10' # current LTS
          - '1'    # automatically expands to the latest stable 1.x release of Julia
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - uses: julia-actions/setup-julia@v2
      with:
        version: ${{ matrix.version }}
    - uses: julia-actions/julia-runtest@v1
    - run: find . -type f -name '*.cov'
    # - run: find . -type f -name '*.c  ov' -exec cat {} \;
    - uses: julia-actions/julia-processcoverage@v1
    - uses: codecov/codecov-action@v5
      with:
        files: lcov.info
        token: ${{ secrets.CODECOV_TOKEN }}
        # If this PR is from a fork, then do NOT fail CI if the Codecov upload errors.
        # If this PR is NOT from a fork, then DO fail CI if the Codecov upload errors.
        # If this is not a PR, then DO fail CI if the Codecov upload errors.
        fail_ci_if_error: ${{ github.event_name != 'pull_request' || github.repository == github.event.pull_request.head.repo.full_name }}
  example-pull-gcr:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Print Docker version
      run: |
        docker --version
        docker version
    # - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
    #   if: false
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker pull
      run: |
        docker pull "ghcr.io/${MY_GCR_NAMESPACE:?}/${MY_GCR_IMAGENAME:?}@${MY_DIGEST_HTCONDOR_EXECUTE:?}"
      env:
        # We intentionally pull by full-length digest (NOT tag) for reproducibility:
        MY_DIGEST_HTCONDOR_EXECUTE: 'sha256:d4384c19cdb2f26bae15b1feef3a12bde66554658562df2626c03ae870003555' # htcondor-execute
    - name: List images
      run: |
        docker ps -a
        docker images
